{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","src/list.js","src/timesheetForm.js","src/user/newUser.js","src/user/loginUser.js","src/app.js"],"names":["form","list","console","log","$","ajax","type","url","done","timesheets","optionsHtml","forEach","timesheetEl","_id","name","append","document","on","e","preventDefault","val","timesheetId","timesheet","time","notes","completed","prop","visitId","timesheetForm","visitResponse","requestBody","prepend","contentType","data","JSON","stringify","response","remove","window","alert","loginUser","event","formData","username","password","empty"],"mappings":";AAAA;AACA,AKAA;ALCA;AACA,AKAA;ALCA;AACA,ACHA,IAAMA,IAAI,4PAAV;ADIA,AENA,AEAA,ADAA;AHOA,AKDAI,AJQA,CIRC,CAAC,EJQIH,IIRL,AJQS,CIRV,CAAUc,CJQG,KIRb,CAAiB,GJQXd,IAAO,GAAM,eIRnB;ALEA,ACOIC,AGdJ,ADAA,EFcIA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;ADNJ,ACOEG,EAAAA,CAAC,CAACC,IAAF,CAAO;ADNT,ACOIC,IAAAA,IAAI,EAAE,KADD;ADLT,ACOIC,IAAAA,GAAG,EAAE;ADNT,ACIS,GAAP,EAGGC,IAHH,CAGQ,UAACC,UAAD,EAAgB;ADN1B,ACOIP,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BM,UAA5B;ADNJ,ACOI,ACnBJ,IAAMT,IDmBEU,ACnBE,WDmBS,GAAG,EAAlB,0+DCnBJ;AFaA,ACOID,IAAAA,UAAU,CAACE,OAAX,CAAmB,UAACC,WAAD,EAAiB;ADNxC,ACOMV,AC6BN,AElDA,ADCA,IDiDM0B,ED7BA1B,OAAO,CAACC,GAAR,AC6Ba,CD7BD,EC6BI,SAAhByB,ID7BA,EAA6BhB,OC6Bb,GAAM,CD7BtB;ADNN,ACOMF,AC6BJ,ACjDF,MFoBMA,WAAW,4BAAqBE,WAAW,CAACC,GAAjC,cAAwCD,WAAW,CAACE,IAApD,cAAX;ADNN,ACOMZ,AC6BJE,AElDF,ADCA,EDiDEA,CAAC,CAAC,ED7BEF,IC6BH,CAAD,CAAUa,CD7BC,CAACZ,GAAR,CAAY,AC6BhB,CAAiB,YD7Bb,EAA2BO,MC6B/B,EAF0B,CAG1B,ED9BI;ADNN,ACOK,AGrBL,ADCA,KFgBI;ADFJ,ACOIR,AC6BF,AElDF,ADEA,IFmBIA,AEnBEF,EDgDE6B,EChDE,GFmBC,CAAC1B,GAAR,CAAY,GC6BK,GAAGC,CAAC,CAACC,IAAF,CD7BpB,AC6B2B,ED7BAK,WAA3B,uiBEnBJ;AHaA,ACOIN,AC6BAE,AElDJ,IHqBIF,AC6BAE,CD7BC,CAAC,EC6BE,EAAE,KADqB,ID5B1B,CAAD,CAAiBS,MAAjB,CAAwBL,WAAxB;ADNJ,ACOG,AC6BCH,AEjDJ,ADeA,GFRE,CC0CEA,AEjDEP,ADeAwC,GDkCC,CEjDG,CFiDD,IClCM,GAAG,SAAZA,SAAY,GAAM,snBCfxB;AJcA,ACSEpC,ACwB6B,AC/B7BA,EFOAA,AEPAA,CFOC,ACwBqB,AC/BrB,CFOCY,AEPAA,CDkCCR,IAHmB,CAGd,ED3BP,AEPA,CFOD,AEPA,CFOYS,AEPAA,EFOZ,AEPA,CFOe,AEPA,GDkCNU,KD3BT,AEPA,EFOyB,AC2BjB,AClCiB,EDkCJ,WClCrB,GFOA,EAA2C,UAACT,CAAD,EAAO;ADRpD,ACSIA,AC2BAhB,AEnCJ,ADAE,IFQEgB,AC2BAhB,AEnCEsC,CHQD,CAACrB,KC2BK,CAAChB,CEnCG,EFmCX,CAAY,AEnCE,IHQd,KGREqC,GFmCF,EAA0Bb,IEnCZ,GFmCd,AEnCoB,kCDAkB,iBAAOc,KAAP;AHA1C,ACSIvC,AC2BA,AEnCFE,ADDwC,ECCxCA,CAAC,CHQCF,AGRAc,IFmCIN,GD3BG,CAACP,AGRT,CAAD,CAAYc,CHQV,CAAYb,AGRd,CHQe,AGRA,CHQC,CC2BC,GAAG,EAAlB,CEnCF,EAAyB,IHQV,CAAD,CAAiBgB,GAAjB,EAAZ,EGRF;AJAF,ACSI,AC2BA,AEpCF,ADDwC,QFUhCC,WAAW,GAAGjB,CAAC,CAAC,aAAD,CAAD,CAAiBgB,GAAjB,EAApB,2BGTsC,iBAAOqB,KAAP;AJC1C,ACSIrC,AC2BJ,AErC0C,ADDA,IFWtCA,CAAC,CAACC,IAAF,CAAO;ADRX,ACSMC,AC2BN,AEtC0C,ADDA,MFYpCA,IAAI,EAAE,KADD;ADPX,ACSMC,AC2BN,AEvC0C,ADDA,MFapCA,GAAG,2BAAoBc,WAApB;ADRT,ACMW,AC8BX,AExC0C,ADAtCoB,KFUA,EAGGjC,IAHH,CAGQ,EEbRiC,KAAK,CAACtB,EFaGG,SAAD,EAAe,CEbvB,GADsC,CAGtC;AHGJ,ACSMpB,AGdoC,MHcpCA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BmB,SAA3B;ADRN,ACSMlB,AC0BHuB,AExCCc,ADEMC,IDsCPf,ED1BGvB,CAAC,CAAC,GC0BE,CAACO,EExCP8B,ADEMC,KDsCP,AExCM,CFwCU,AExCTvB,EDFgC,GAIrB,IFYd,CAAD,AC0BcP,CD1BWQ,GAAzB,AGdF,CHc+BE,EGfO,CAGtC,GFsCe,EAAiB,CD1BQ,CAACT,GAAvC;ADRN,ACSMT,AC0BDF,ACtCCyC,MFYAvC,AC0BDF,CD1BE,CAAC,KC0BI,CAACC,ECtCPwC,CDsCD,CAAY,MCtCH,EAAEvC,CAAC,CFYV,AEZW,CFYZ,CAAwBgB,EC0BzB,CD1BC,CAA4BE,AC0BDV,SD1BU,CAACE,CC0BvC,GD1BC,IEZW,CAAD,CAA4BM,GAA5B,EADK;AHKrB,ACSMhB,AC0BAM,AEvCIgC,ADCJE,MFYAxC,AC0BAM,CD1BC,CAAC,MGbEgC,EDCJE,CDsCW,KE3CyB,EDK5B,CCDO,CDCLxC,CAAC,CFYV,AEZW,CFYZ,CAAwBgB,GAAxB,CAA4BE,SAAS,CAACC,CC0BNX,GD1BhC,IEZW,CAAD,CAA4BQ,EDsCK,CAACP,ACtClC,GDsCC,cAAwCD,WAAW,CAACE,IAApD,cAAX;AFlCN,ACSMV,AC0BD,AEvCCuC,ADFe,KDsClB,CDvBGvC,CAAC,CAAC,OEnBkC,CCMpCuC,CDGF,OCHU,EAAEvC,CAAC,CAAC,CHaX,CAAD,CAAyBgB,GAAzB,CAA6BE,SAAS,CAACE,KAAvC,EALqB,AGRV,CHcX,AGdU,CAA4BJ,GAA5B,EADK;AJMrB,ACUM,AC0BFhB,AExCEwC,IFwCFxC,CAAC,CAAC,QAAD,CAAD,CAAYW,AExCV6B,MFwCF,CAAmBlC,CExCT,EAAEN,CAAC,CAAC,MFwCd,kBExCa,CAAD,CAA4BgB,GAA5B;AJKhB,ACUM,AC0BH,AE3CkB,ADLqB,GD+BlB,CAAtB,CAJ0B,CAuB1B,SEjDwC,EAStC;AJGJ,ACUM,AEvBoC;AHc1C,ACUM,AC2BJhB,AElDwC,ADDA,EDmDxCA,CAAC,CAACY,QAAD,CAAD,CAAYC,EAAZ,CAAe,ICxCYb,CAAC,CAACC,CDwC7B,EAAwB,CCxCG,CAAO,iBDwClC;AFpCF,AEoCE,AElDwC,ADWlCC,gBAAAA,IAAI,EAAE,MADsB,2CDwCW,iBAAOY,CAAP;AFnC/C,ACSMI,AC0ByC,AElDL,ADYlCf,MFYFe,SAAS,CAACG,AEZRlB,GAAG,ECDkBH,ADChB,CCDiB,CAACC,EHazB,EGbuB,CHaDD,AGbQ,CHaP,CAAC,YEdM,GFcP,CAAD,CAAmBsB,IAAnB,CAAwB,SAAxB,EAAmC,IAAnC,CAAtB,GAAiEtB,CAAC,CAAC,cAAD,CAAD,CAAkBsB,IAAlB,CAAuB,SAAvB,EAAkC,IAAlC,CAAjE;ADRN,ACSMtB,ACyByC,AEtCvCE,ADCA0B,MFYF5B,CAAC,CAAC,QGbAE,ADCA0B,ICDI,EAAE,KDCK,CCFiB,CDEf,GFYd,CAAD,CAA4BZ,GAA5B,CAAgCE,SAAS,AEfX,CFeYK,OAA1C;ADRN,ACSK,ACwB0C,AErCvCpB,ADCA0B,KFJJ,EAJgD,CAqBhD,QGdI1B,ADCA0B,GCDG,CDCC,CCDC,CDCCC,IAAI,CAACC,SAAL,CAAeO,ECHO,MDGtB;AHId,ACUI,ACsB2C,AEpCvCV,ADJ4B,eAAP,CCIrBA,ADfkC,WCevB,EAAE,kBAHe;AJQpC,ACUI,ACqB2C,AEnCvCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeO,QAAf;AJKd,ACUI,ACqBAxB,AExCgC,ADZM,cDoDtCA,CAAC,AExCwB,CFwCvBC,AEnDoC,cFmDtC,GAD2C,CAG3C;AFhCJ,ACUI,AErBQiB,cAAAA,QAX8B;AHuB1C,ACUI,ACsBMN,AEtDgC,ADiBpC,cDqCIA,WAJqC,GAIvB;AF/BxB,ACWG,ACqBGhB,AE5CMsB,ADONhC,GFZJ,WGKUgC,ADONhC,CAAC,CDqCDU,ACrCE,IDqCE,EAAEV,AEvD8B,ADkBnC,CDqCM,ACrCP,CDqCQ,ACrCEyC,KAAV,EDqCO,CAAD,ACxD8B,CDwDnBzB,ACnCjB,GDmCM,EADY;AF9BxB,ACWE,ACqBIG,AEtCA,SHiBGvB,IAAP,GCqBIuB,IAAI,EAAEnB,CAAC,CAAC,OAAD,CAAD,CAAWgB,GAAX,EAFY;AF7BxB,ACWC,ACqBKI,AEtCApB,ADEAA,CFjCN,aG+BMA,ADEAA,CCFC,ADEA,CDoCDoB,AEtCE,ADEA,KDoCG,CEtCJ,ADEA,CDoCMpB,AEtCP,ADEA,CDoCQ,AEtCEyC,ADEA9B,CDoCD,IEtCT,CDEA,CAAiB,CCr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":"app.a6a4d504.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","\n\nconst form = `\n<form id = \"timesheetDrop\" >\n<div class=\"form-group\">\n<label for=\"projectId\">Project name</label>\n<select name=\"timesheet\" id=\"timesheets\"></select>\n</div>\n<button type=\"submit\" class=\"btn\">show Tasks</button>\n\n</form>\n\n\n`;\nconst list = () => {\n    console.log(\"list\", list); \n  $.ajax({\n    type: \"GET\",\n    url: \"/api/timesheet/all\",\n  }).done((timesheets) => {\n    console.log(\"timesheets: \", timesheets);\n    let optionsHtml = \"\";\n    timesheets.forEach((timesheetEl) => {\n      console.log(\"timesheetEl: \", timesheetEl);\n      optionsHtml += `<option value=${timesheetEl._id}>${timesheetEl.name}</option>`;\n      console.log(\"optionsHtml\", optionsHtml);\n    });\n    console.log(\"optionsHtml\", optionsHtml);\n    $(\"#timesheets\").append(optionsHtml);\n  });\n\n\n  $(document).on(\"submit\", \"#timesheetDrop\", (e) => {\n    e.preventDefault();\n    console.log($(\"#timesheets\").val());\n    const timesheetId = $(\"#timesheets\").val();\n    $.ajax({\n      type: \"GET\",\n      url: `/api/timesheet/${timesheetId}`,\n    }).done((timesheet) => {\n      console.log(\"timesheet: \", timesheet); \n      $(\"input[name='jobId']\").val(timesheet._id)\n      $(\"input[name='name']\").val(timesheet.name)\n      $(\"input[name='time']\").val(timesheet.time)\n      $(\"input[name='notes']\").val(timesheet.notes)\n      // if(timesheet.completed) {\n      //   $(\"#completedYes\").prop('checked', true) \n      // } else {\n      //   $(\"#completedNo\").prop('checked', true) \n      // }\n      timesheet.completed ? $(\"#completedYes\").prop('checked', true) : $(\"#completedNo\").prop('checked', true)\n      $(\"select[name='visitId']\").val(timesheet.visitId)\n    });\n    // const response = $.ajax({\n    //   type: \"Patch\", // OR GET\n    //   url: `/api//project/update/${projectId}`,\n    //   contentType: \"application/json\",\n    //   data: JSON.stringify(response),\n    // });\n\n  });\n  return form;\n};\n\nexport default list;","import list from './list'\n\nconst form = `\n\n<form id=\"timesheetId\">\n<h1>Client Timesheet</h1>\n<div class=\"form-group\">\n  <div class=\"form-group\">\n    <label for=\"jobId\">Job ID</label>\n    <p>Use this to update or delete an exsiting timesheet</p>\n    <input type=\"hidden\" class=\"form-control\" id=\"jobId\" placeholder=\"Enter Job ID\" name=\"jobId\">\n    \n  </div>\n\n    <label for=\"name\">Client Name</label>\n    <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter Client Name\" name=\"name\">\n    \n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"time\">Time Spent On Site</label>\n    <input type=\"text\" class=\"form-control\" id=\"time\" placeholder=\"Arrival/Departure Time\" name=\"time\">\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"notes\">Notes</label>\n    <input type=\"text\" class=\"form-control\" id=\"notes\" placeholder=\"Notes From Visit\" name=\"notes\">\n  </div>\n\n  <fieldset class=\"form-group\">\n    <legend class=\"col-form-label\" id=\"completedtext\">Was the job fully completed?</legend>\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" id=\"completedYes\" name =\"completed\" value=\"true\">\n      <label class=\"form-check-label\" for=\"completedYes\">Yes</label>\n    </div>\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" id=\"completedNo\" name =\"completed\" value=\"false\">\n      <label class=\"form-check-label\" for=\"completedNo\">No</label>\n    </div>\n  </fieldset>\n  <div class=\"form-group\">\n    <label for=\"visitId\">Visit Type</label>\n    <select name=\"visitId\" id=\"visit\"></select>\n  </div>\n  <div class=\"form-group\">\n  <button type=\"button\" id=\"create-timesheet\" class=\"btn btn-primary\">Create</button>\n  <button  type=\"button\" id=\"update-timesheet\"  class=\"btn btn-primary\">Update</button>\n  <button  type=\"button\" id=\"delete-timesheet\"  class=\"btn btn-primary\">Delete</button>\n  </form>\n  </div>\n`;\n\nconst timesheetForm = () => {\n  // This logic below gets all categories and loads it in the dropdown\n  $(\"body\").append(list());\n  // Call server using AJAX to get all categories\n  const visitResponse = $.ajax({\n    type: \"GET\",\n    url: \"/api/timesheet/visitId/all\",\n  }).done((visitId) => {\n    console.log(\"Visit ID: \", visitId);\n    let optionsHtml = \"\";\n    /*\n    Iterate over all categories\n    Construct a dynamic <option> tag for each category\n    Append your optionsHtml to the <select> tag with id \"categories\"\n    */\n   visitId.forEach((timesheetEl) => {\n     console.log(\"timesheet el\", timesheetEl);\n      optionsHtml += `<option value=${timesheetEl._id}>${timesheetEl.name}</option>`;\n    });\n\n    $(\"#visit\").append(optionsHtml);\n  });\n\n  // Event listener to for Create Fruit Button\n  $(document).on(\"click\", \"#create-timesheet\", async (e) => {\n    e.preventDefault();\n\n    // Construct body by extracting info from the form\n    const requestBody = {\n      name: $(\"#name\").val(),\n      time: $(\"#time\").val(),\n      notes: $(\"#notes\").val(),\n      completed: $(`input[name=\"completed\"]:checked`).val(),\n      visitId: $(\"#visit\").val(),\n    };\nconsole.log(\"request body: \", requestBody); \n\n\nconsole.log(\"JobId: \", requestBody.visitId); \n$(\"jobId\").prepend(requestBody.visitId);\n$(\"requestbody\").append(requestBody);\n\n\n    //Make a POST request to the server to create a fruit\n    const response = await $.ajax({\n      type: \"POST\",\n      url: \"/api/timesheet/new-timesheet\",\n      contentType: \"application/json\",\n      data: JSON.stringify(requestBody),\n    });\n\n    $('#timesheetDrop').remove();\n    $('body').prepend(list()); \n    // Create a pop up alert in the UI to inform the user that fruit was created\n    window.alert(\"Timesheet Created!\");\n  });\n\n  // Event listener to for Update Fruit Button\n  $(document).on(\"click\", \"#update-timesheet\", async (e) => {\n    e.preventDefault();\n\n    // Construct body by extracting info from the form\n    const requestBody = {\n      name: $(\"#name\").val(),\n      time: $(\"#time\").val(),\n      notes: $(\"#notes\").val(),\n      completed: $(`input[name=\"completed\"]:checked`).val(),\n      visitId: $(\"#visit\").val(),\n    };\n\n    // Make a PATCH request to the server to update a fruit\n    const response = await $.ajax({\n      type: \"PATCH\",\n      url: `/api/timesheet/update-timesheet/${$(\"#jobId\").val()}`,\n      contentType: \"application/json\",\n      data: JSON.stringify(requestBody),\n    });\n\n    // Create a pop up alert in the UI to inform the user that fruit was updated\n    window.alert(\"Timesheet Updated!\");\n  });\n\n  // Event listener to for Delete Fruit Button\n  $(document).on(\"click\", \"#delete-timesheet\", async (e) => {\n    e.preventDefault();\n\n    // Make a DELETE request to the server to delete a fruit\n    const response = await $.ajax({\n      type: \"DELETE\",\n      url: `/api/timesheet/delete-timesheet/${$(\"#jobId\").val()}`,\n      contentType: \"application/json\",\n    });\n\n    // Create a pop up alert in the UI to inform the user that fruit was deleted\n    window.alert(\"Timesheet Deleted!\");\n  });\n\n  return form;\n};\n\n\n\nexport default timesheetForm;","import newUser from \"./newUser\";\nimport timesheetForm from \"../timesheetForm\";\n\n/*\nI've added a button in this form to allow a first time user to register\nClicking on the Register New User button loads the newUser.js form\n*/\n\nconst form = `\n  <form id=\"login-user\">\n  <h1>Staff Portal Login</h1>\n    <div class=\"form-group\">\n      <label for=\"Staff username\">Username</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Please enter username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" placeholder=\"Please enter password\" name=\"password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" id=\"submit-button\">Register</button>\n  </form>\n  \n`;\n\nconst loginUser = () => {\n  $(document).on(\"submit\", \"#login-user\", async (event) => {\n    event.preventDefault();\n\n    // Extract username and password entered\n    const formData = {\n      username: $(\"input[name='username']\").val(),\n      password: $(\"input[name='password']\").val(),\n    };\n\n    // Make a call to validate user name and password\n    try {\n      const response = await $.ajax({\n        type: \"POST\",\n        url: \"/api/users/register\",\n        contentType: \"application/json\",\n        data: JSON.stringify(formData),\n      });\n\n      // Clear current login form as login is successful by calling empty() function\n      $(\"body\").empty();\n      \n      // Append the fruit form to the body allowing the user to create/update/delete fruits\n      $(\"body\").append(timesheetForm());\n    } catch (err) {\n      // If there's a problem logging in, then add a message to let user know that an invalid combination was provided\n      $(\"body\").append(\"<div>Invalid user/pass provided!</div>\");\n    }\n  });\n  return form;\n};\n\n// // Add event listener for Register new user button being clicked\n// $(document).on(\"click\", \"#register-new-user\", () => {\n//   // Clear current login form\n//   $(\"body\").empty();\n\n//   // Append new user form instead\n//   $(\"body\").append(newUser());\n// });\n\nexport default loginUser;","import newUser from \"./newUser\";\nimport fruitForm from \"../timesheetForm\";\n// import list from \"../list\"; \n\n/*\nI've added a button in this form to allow a first time user to register\nClicking on the Register New User button loads the newUser.js form\n*/\n\nconst form = `\n  <form id=\"login-user\">\n  <h1>Staff Portal Login</h1>\n    <div class=\"form-group\">\n      <label for=\"Staff username\">Username</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Please enter username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" placeholder=\"Please enter password\" name=\"password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" id=\"submit-button\">Submit</button>\n  </form>\n  <button id=\"register-new-user\" class=\"btn btn-primary\">Register</button>\n`;\n\nconst loginUser = () => {\n  $(document).on(\"submit\", \"#login-user\", async (event) => {\n    event.preventDefault();\n\n    // Extract username and password entered\n    const formData = {\n      username: $(\"input[name='username']\").val(),\n      password: $(\"input[name='password']\").val(),\n    };\n\n    // Make a call to validate user name and password\n    try {\n      const response = await $.ajax({\n        type: \"POST\",\n        url: \"/api/users/login\",\n        contentType: \"application/json\",\n        data: JSON.stringify(formData),\n      });\n\n      // Clear current login form as login is successful by calling empty() function\n      $(\"body\").empty();\n\n      // Append the fruit form to the body allowing the user to create/update/delete fruits\n      // $(\"body\").append(list());\n      $(\"body\").append(fruitForm());\n    } catch (err) {\n      // If there's a problem logging in, then add a message to let user know that an invalid combination was provided\n      $(\"body\").append(\"<div>Invalid user/pass provided!</div>\");\n    }\n  });\n  return form;\n};\n\n// Add event listener for Register new user button being clicked\n$(document).on(\"click\", \"#register-new-user\", () => {\n  // Clear current login form\n  $(\"body\").empty();\n\n  // Append new user form instead\n  $(\"body\").append(newUser());\n});\n\nexport default loginUser;","\nimport \"regenerator-runtime/runtime\";\n\nimport loginUser from \"./user/loginUser\";\n\n\n$(\"body\").append(loginUser());"]}